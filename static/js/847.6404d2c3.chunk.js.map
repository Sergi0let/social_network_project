{"version":3,"file":"static/js/847.6404d2c3.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileStatus.jsx","webpack://social/./src/components/Profile/Profile.module.scss?4008","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social/./src/components/Profile/MyPosts/Post/Post.module.scss?ca59","components/Profile/MyPosts/Post/Post.jsx","webpack://social/./src/components/Profile/MyPosts/MyPosts.module.scss?39b9","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["import React from 'react';\n\nclass ProfileStatus extends React.Component {\n  state = {\n    editMode: false,\n    status: this.props.status,\n  };\n\n  activateEditMode = () => {\n    this.setState({\n      editMode: true,\n    });\n  };\n\n  deactivateEditMode = () => {\n    this.setState({\n      editMode: false,\n    });\n    this.props.updateStatus(this.state.status);\n  };\n\n  onStatusChange = (e) => this.setState({ status: e.target.value });\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({ status: this.props.status });\n    }\n  }\n  render() {\n    const { editMode, status } = this.state;\n    return (\n      <div>\n        {!editMode && (\n          <div>\n            <span onDoubleClick={this.activateEditMode}>\n              {this.props.status || 'No STATUS'}\n            </span>\n          </div>\n        )}\n        {editMode && (\n          <div>\n            <input\n              autoFocus={true}\n              onBlur={this.deactivateEditMode}\n              type=\"text\"\n              value={status}\n              onChange={this.onStatusChange}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ProfileStatus;\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__7iquG\",\"profileWrapper\":\"Profile_profileWrapper__ESVWg\",\"profileContent\":\"Profile_profileContent__-KmxD\",\"profileText\":\"Profile_profileText__287B0\"};","import React from 'react';\nimport Preloader from '../../common/preloader/Preloader';\nimport ProfileStatus from './ProfileStatus';\nimport userPhoto from '../../../assets/images/user.png';\n\nimport s from '../Profile.module.scss';\n\nconst ProfileInfo = ({ profile, updateStatus, status }) => {\n  if (!profile) {\n    return <Preloader />;\n  }\n  return (\n    <div className={s.profileWrapper}>\n      <div>\n        <img src={profile.photos.large || userPhoto} alt=\"Profile user\" />\n      </div>\n      <div className={s.profileContent}>\n        <div className={s.profileText}>{profile.fullName}</div>\n        <div className={s.profileText}>\n          <span>My id: </span>\n          {profile.userId}\n        </div>\n        <div className={s.profileText}>\n          <span>aboutMe: </span>\n          {profile.aboutMe}\n        </div>\n        <div className={s.profileText}>My email: {profile.contacts.email}</div>\n        <div className={s.profileText}>\n          Facebook: {profile.contacts.facebook}\n        </div>\n        <div className={s.profileText}>\n          instagram: {profile.contacts.instagram}\n        </div>\n\n        <div className={s.profileText}>{profile.lookingForAJob}</div>\n        <div className={s.profileText}>{profile.lookingForAJobDescription}</div>\n      </div>\n      <ProfileStatus status={status} updateStatus={updateStatus} />\n    </div>\n  );\n};\nexport default ProfileInfo;\n/*\n{\n         \"aboutMe\": \"я круто чувак\",\n         \"contacts\": {\n                    \"skype\": \"skyp\",\n                    \"vk\": \"vk.com\",\n                    \"facebook\": \"facebook\",\n                    \"icq\": \"icq\",\n                    \"email\": \"email\",\n                    \"googlePlus\": \"gogep\",\n                    \"twitter\": \"twitter\",\n                    \"instagram\": \"instagra\",\n                    \"whatsApp\": \"watsap\"\n                   },\n         \"lookingForAJob\": true,\n         \"lookingForAJobDescription\": 'Ищу работу, знаю это это и это',\n         \"fullName\": \"samurai dmitry\",\n         \"userId\": 2\n }\n*/\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__V-X0T\"};","import React from 'react';\n\nimport s from './Post.module.scss';\n\nconst Post = (props) => {\n  return (\n    <div key={props.id} className={s.item}>\n      <img\n        src=\"https://cdn.shopify.com/s/files/1/1052/2158/products/55519_ATLA_AangAirBending_POP_GLAM-WEB_-_Copy.png?v=1638480833\"\n        alt=\"avatar\"\n      />\n      {props.message}\n      <div>\n        <span>Like </span>\n        {`${props.like ? props.like : '0'}`}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport default {\"postsText\":\"MyPosts_postsText__ILEmW\"};","import React, { Memo } from 'react';\nimport Post from './Post/Post';\n\nimport s from './MyPosts.module.scss';\nimport { Field, reduxForm } from 'redux-form';\nimport {\n  requiredField,\n  maxLengthCreator,\n} from '../../../validation/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nconst maxLength10 = maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} className={s.postsText}>\n      <Field\n        component={Textarea}\n        placeholder=\"write you post\"\n        name=\"newPostText\"\n        validate={[requiredField, maxLength10]}\n      />\n      <button>Add post</button>\n    </form>\n  );\n};\n\nAddNewPostForm = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm);\n\nconst MyPosts = React.memo((props) => {\n  const postsElement = props.posts.map((post) => (\n    <Post\n      key={post.id}\n      id={post.id}\n      message={post.message}\n      like={post.likesCout}\n    />\n  ));\n\n  const onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={s.postsBlock}>\n      My posts\n      <AddNewPostForm onSubmit={onAddPost} />\n      <div className={s.posts}>{postsElement}</div>\n    </div>\n  );\n});\n\nexport default MyPosts;\n","import { connect } from 'react-redux';\n\nimport MyPosts from './MyPosts';\nimport { addPostActionCreator } from '../../../redux/profileReducer';\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.postsData,\n    newPostText: state.profilePage.newPostText,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => dispatch(addPostActionCreator(newPostText)),\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport s from './Profile.module.scss';\n\nconst Profile = ({ profile, status, updateStatus }) => {\n  return (\n    <div className={s.profile}>\n      <ProfileInfo\n        profile={profile}\n        status={status}\n        updateStatus={updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\n\nimport Profile from './Profile';\nimport {\n  getUserProfile,\n  updateStatus,\n  getStatus,\n} from '../../redux/profileReducer';\nimport withAuthRedirect from '../../hoc/WithAuthRedirect';\n\n// const myId = 26438;\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    const { getUserProfile, getStatus, authorizedUserId, router } = this.props;\n    let profileId = router.params.profileId;\n    if (!profileId) {\n      profileId = authorizedUserId;\n    }\n    getUserProfile(profileId);\n    getStatus(profileId);\n  }\n  render() {\n    const { profile, updateStatus, status } = this.props;\n    return (\n      <Profile\n        {...this.props}\n        profile={profile}\n        updateStatus={updateStatus}\n        status={status}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return <Component {...props} router={{ location, navigate, params }} />;\n  }\n\n  return ComponentWithRouterProp;\n}\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\nconst withAuthRedirect = (Component) => {\n  let RedirectComponent = (props) => {\n    if (!props.isAuth) return <Navigate to=\"/login\" />;\n    return <Component {...props} />;\n  };\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedAuthRedirectComponent;\n};\n\nexport default withAuthRedirect;\n\n// Class type\n//\n// export const withAuthRedirect = (Component) => {\n//   class RedirectComponent extends React.Component {\n//     render() {\n//       if (!this.props.isAuth) return <Navigate to=\"/login\" />;\n//       return <Component {...this.props} />;\n//     }\n//   }\n//   return RedirectComponent;\n// };\n"],"names":["ProfileStatus","state","editMode","status","props","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","target","value","prevProps","this","onDoubleClick","autoFocus","onBlur","type","onChange","React","profile","className","s","src","photos","large","userPhoto","alt","fullName","userId","aboutMe","contacts","email","facebook","instagram","lookingForAJob","lookingForAJobDescription","Preloader","message","like","id","maxLength10","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","requiredField","reduxForm","form","postsElement","posts","map","post","likesCout","values","addPost","newPostText","connect","profilePage","postsData","dispatch","addPostActionCreator","MyPosts","ProfileContainer","getUserProfile","getStatus","authorizedUserId","profileId","router","params","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","to"],"sourceRoot":""}